AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: My Lambda Resources
Resources:
  GetMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovie
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MoviesTable
      Handler: movies.getMovie
      Runtime: python3.6
      CodeUri: s3://movies-bucket-200134/00add2f130eaea842f04b8a43de05494
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /movie/{movie_id}
            Method: GET
  PutMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovie
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MoviesTable
      Handler: movies.putMovie
      Runtime: python3.6
      CodeUri: s3://movies-bucket-200134/00add2f130eaea842f04b8a43de05494
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MoviesTable
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /movie/{movie_id}
            Method: PUT
  GetMovieByRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovieByRoom
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MoviesTable
      Handler: movies.getMovieByRoom
      Runtime: python3.6
      CodeUri: s3://movies-bucket-200134/00add2f130eaea842f04b8a43de05494
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MoviesTable
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /movie/{movie_id}/room/{room_id}
            Method: GET
  GetRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getRoom
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MoviesTable
      Handler: movies.getRoom
      Runtime: python3.6
      CodeUri: s3://movies-bucket-200134/00add2f130eaea842f04b8a43de05494
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /room/{room_id}
            Method: GET
  PutPeopleList:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putPeopleList
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MoviesTable
      Handler: movies.putPeopleList
      Runtime: python3.6
      CodeUri: s3://movies-bucket-200134/00add2f130eaea842f04b8a43de05494
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MoviesTable
      Events:
        PutMovie:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /room/{room_id}
            Method: PUT
  GetPerson:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPerson
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MoviesTable
      Handler: movies.getPerson
      Runtime: python3.6
      CodeUri: s3://movies-bucket-200134/00add2f130eaea842f04b8a43de05494
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MoviesTable
      Events:
        GetMovie:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /person/{person_id}
            Method: GET
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: movies-app
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://movies-bucket-200134/a9c359b08cf56999c93a991538e12e91
  MoviesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: movies-app
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
